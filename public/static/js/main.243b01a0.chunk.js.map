{"version":3,"sources":["types/types.js","helpers/apiService.js","helpers/parseEvents.js","actions/event.js","actions/auth.js","components/CalendarEvent/CalendarEvent.jsx","actions/ui.js","components/CalendarModal/CalendarModal.jsx","components/Navbar/Navbar.jsx","helpers/calendar-messages-es.js","components/AddNewFab/AddNewFab.jsx","components/DeleteEventFab/DeleteEventFab.jsx","pages/CalendarPage/CalendarPage.jsx","hooks/useForm.js","pages/LoginPage/LoginPage.jsx","routers/PrivateRoute.jsx","routers/PublicRoute.jsx","routers/AppRouter.jsx","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.jsx","index.js"],"names":["types","baseUrl","process","apiFetch","endpoint","data","method","url","fetch","headers","body","JSON","stringify","apiAuthFetch","token","localStorage","getItem","parseEvents","events","map","event","start","moment","toDate","end","eventAddNew","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","checkingFinished","login","user","startLogout","dispatch","clear","logout","CalendarEvent","title","name","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowEnd","clone","initEvent","notes","CalendarModal","modalOpen","useSelector","state","ui","activeEvent","calendar","useDispatch","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","target","value","closeModal","isOpen","onRequestClose","style","className","overlayClassName","closeTimeoutMS","onSubmit","e","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","a","id","res","json","ok","msg","getState","auth","_id","uid","console","log","eventStartAddNew","onChange","minDate","placeholder","autoComplete","rows","Navbar","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarPage","lastView","setLastView","newEvents","startAccessor","endAccessor","view","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onSelectSlot","selectable","onSelectEvent","onDoubleClickEvent","onView","setItem","useForm","initialState","values","setValues","reset","LoginPage","lEmail","lPassword","loginValues","handleLoginInputChange","rName","rEmail","rPassword","rPasswordRepeat","registerValues","handleRegisterInputChange","email","password","Date","getTime","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","checking","path","rootReducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.243b01a0.chunk.js","sourcesContent":["export const types = {\n  uiOpenModal: '[ui] Open modal',\n  uiCloseModal: '[ui] Close modal',\n\n\n  eventSetActive: '[calendar] : Add set active',\n  eventStartAddNew: '[calendar] : Start add new event',\n  eventAddNew: '[calendar] : Add new event',\n  eventClearActiveEvent: '[calendar] : Clear active event',\n  eventUpdated: '[calendar] : Event updated',\n  eventDeleted: '[calendar] : Event deleted',\n  eventloaded: '[calendar] :  Events loaded',\n  eventClean: '[calendar] :  Events clean',\n\n  authCheckingFinish: '[auth] Finish checking login state',\n  authStartLogin: '[auth] Start login',\n  authLogin: '[auth] Login',\n  authStartRegister: '[auth] Start register',\n  authStartTokenRenew: '[auth] Start token renew',\n  authLogout: '[auth] Logout',\n}","const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const apiFetch = (endpoint, data, method = 'GET') => {\n\n  const url = `${baseUrl}/${endpoint}`;\n\n  if (method === 'GET') {\n    return fetch(url);\n  }\n\n  return fetch(url, {\n    method,\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n}\n\nexport const apiAuthFetch = (endpoint, data, method = 'GET') => {\n  const token = localStorage.getItem('token') || '';\n  const url = `${baseUrl}/${endpoint}`;\n\n  if (method === 'GET') {\n    return fetch(url, {\n      method,\n      headers: {\n        'x-token': token\n      }\n    });\n  }\n\n  return fetch(url, {\n    method,\n    headers: {\n      'Content-type': 'application/json',\n      'x-token': token\n    },\n    body: JSON.stringify(data)\n  });\n}","import moment from 'moment';\nexport const parseEvents = (events = []) => {\n  return events.map(event => ({\n    ...event,\n    start: moment(event.start).toDate(),\n    end: moment(event.end).toDate(),\n  }))\n}","import { types } from \"../types/types\";\nimport { apiAuthFetch } from \"../helpers/apiService\";\nimport { parseEvents } from \"../helpers/parseEvents\";\nimport Swal from \"sweetalert2\";\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid: _id, name } = getState().auth;\n    try {\n      const res = await apiAuthFetch('events', event, 'POST');\n      const data = await res.json();\n      if (!data.ok) {\n        return Swal.fire('Error', data.msg, 'error');\n      }\n      event.id = data.event.id;\n      event.user = {\n        _id,\n        name\n      }\n      dispatch(eventAddNew(event));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n\nconst eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent\n});\n\nexport const startEventUpdate = (event) => {\n  return async (dispatch) => {\n    const res = await apiAuthFetch(`events/${event.id}`, event, 'PUT');\n    const data = await res.json();\n    if (!data.ok) {\n      return Swal.fire('Error', data.msg, 'error');\n    }\n    dispatch(eventUpdated(event))\n  }\n}\n\nconst eventUpdated = (event) => ({\n  type: types.eventUpdated,\n  payload: event\n});\n\nexport const startEventDelete = () => {\n  return async (dispatch, getState) => {\n    const { id } = getState().calendar.activeEvent;\n    const res = await apiAuthFetch(`events/${id}`, {}, 'DELETE');\n    const data = await res.json();\n    if (!data.ok) {\n      return Swal.fire('Error', data.msg, 'error');\n    }\n    dispatch(eventDeleted());\n  }\n}\n\nconst eventDeleted = () => ({\n  type: types.eventDeleted\n});\n\nexport const eventPurge = () => ({\n  type: types.eventClean\n});\n\nconst eventloaded = (events) => ({\n  type: types.eventloaded,\n  payload: events\n});\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    const res = await apiAuthFetch('events');\n    const data = await res.json();\n    if (!data.ok) {\n      return Swal.fire('Error', data.msg, 'error');\n    }\n    const newEvents = parseEvents(data.events);\n    dispatch(eventloaded(newEvents));\n  }\n} ","import { types } from \"../types/types\";\nimport { apiFetch, apiAuthFetch } from \"../helpers/apiService\";\nimport Swal from \"sweetalert2\";\nimport { eventPurge } from \"./event\";\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    const res = await apiFetch('auth', { email, password }, 'POST')\n    const data = await res.json();\n    if (!data.ok) {\n      return Swal.fire('Error', data.msg, 'error');\n    }\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('token-init-date', new Date().getTime());\n    dispatch(login({\n      uid: data.uid,\n      name: data.name\n    }));\n  }\n}\n\nexport const startRegister = (name, email, password) => {\n  return async (dispatch) => {\n    const res = await apiFetch('auth/register', { name, email, password }, 'POST')\n    const data = await res.json();\n    if (!data.ok) {\n      return Swal.fire('Error', data.msg, 'error');\n    }\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('token-init-date', new Date().getTime());\n    dispatch(login({\n      uid: data.uid,\n      name: data.name\n    }));\n  }\n}\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n\n    const res = await apiAuthFetch('auth/renew');\n    const data = await res.json();\n    if (!data.ok) {\n      return dispatch(checkingFinished());\n    }\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('token-init-date', new Date().getTime());\n    dispatch(login({\n      uid: data.uid,\n      name: data.name\n    }));\n  }\n}\n\nconst checkingFinished = () => ({\n  type: types.authCheckingFinish\n})\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user\n});\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(logout());\n    dispatch(eventPurge());\n  }\n}\nconst logout = () => ({\n  type: types.authLogout\n});","import React from 'react'\n\nconst CalendarEvent = ({ event }) => {\n  const { title, user } = event;\n  return (\n    <div>\n      <strong>{title}</strong>\n      <span>- {user.name}</span>\n    </div>\n  )\n}\n\nexport default CalendarEvent\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal\n});\n","import moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { eventClearActiveEvent, eventStartAddNew, startEventUpdate } from '../../actions/event';\nimport { uiCloseModal } from '../../actions/ui';\nimport './index.scss';\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root')\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowEnd = now.clone().add(1, 'hours');\n\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: now.toDate(),\n  end: nowEnd.toDate()\n};\nconst CalendarModal = () => {\n  const { modalOpen } = useSelector(state => state.ui);\n  const { activeEvent } = useSelector(state => state.calendar);\n  const dispatch = useDispatch();\n  const [dateStart, setDateStart] = useState(now.toDate());\n  const [dateEnd, setDateEnd] = useState(nowEnd.toDate());\n  const [titleValid, setTitleValid] = useState(true);\n\n  const [formValues, setFormValues] = useState(initEvent);\n  const { notes, title, start, end } = formValues;\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent);\n    }\n    else {\n      setFormValues(initEvent);\n    }\n  }, [activeEvent]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire('Error', 'The end date should be greater than start date.', 'error');\n    }\n    if (title.trim().length < 2) {\n      return setTitleValid(false);\n    }\n\n    if (activeEvent) {\n      dispatch(startEventUpdate(formValues));\n    }\n    else {\n      dispatch(eventStartAddNew(formValues));\n    }\n\n    setTitleValid(true);\n    closeModal();\n  }\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    });\n  }\n\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActiveEvent());\n    setFormValues(initEvent);\n  }\n\n  const handleStartDateChange = (e) => {\n    setDateStart(e);\n    setFormValues({\n      ...formValues,\n      start: e\n    });\n  }\n\n  const handleEndDateChange = (e) => {\n    setDateEnd(e);\n    setFormValues({\n      ...formValues,\n      end: e\n    });\n  }\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      // onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      className=\"modal\"\n      overlayClassName=\"modal-bg\"\n      closeTimeoutMS={200}\n    >\n      {activeEvent\n        ? (\n          <h1>Edit event</h1>\n        )\n        : (\n          <h1>New event</h1>\n        )\n      }\n\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Date & hour to start</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={dateStart}\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Date & hour to end</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            value={dateEnd}\n            className=\"form-control\"\n            minDate={dateStart}\n          />\n        </div>\n        <hr />\n        <div className=\"form-group\">\n          <label>Title & notes</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && 'is-invalid'}`}\n            placeholder=\"Título del evento\"\n            name=\"title\"\n            value={title}\n            onChange={handleInputChange}\n            autoComplete=\"off\"\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Short description</small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Notas\"\n            rows=\"5\"\n            value={notes}\n            onChange={handleInputChange}\n            name=\"notes\"\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Additional Information</small>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n    </Modal>\n  )\n}\n\nexport default CalendarModal\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nconst Navbar = () => {\n\n  const { name } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n  }\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\">{name}</span>\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\n        <i className=\"fas fa-sign-out-alt\" />\n        <span> Salir</span>\n      </button>\n    </div>\n  )\n}\n\nexport default Navbar;\n","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: total => `+ Ver más (${total})`\n};","import React from 'react';\nimport './index.scss';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nconst AddNewFab = () => {\n  const dispatch = useDispatch();\n\n  const handleClickNew = () => {\n    dispatch(uiOpenModal());\n  }\n\n  return (\n    <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\n      <i className=\"fas fa-plus\" />\n    </button>\n  )\n}\n\nexport default AddNewFab\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { startEventDelete } from '../../actions/event';\nimport './index.scss';\n\nconst DeleteEventFab = () => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(startEventDelete());\n  }\n\n  return (\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n      <i className=\"fas fa-trash\" />\n      <span> Delete event</span>\n    </button>\n  )\n}\n\nexport default DeleteEventFab\n","import moment from 'moment';\nimport 'moment/locale/es';\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport CalendarEvent from '../../components/CalendarEvent/CalendarEvent';\nimport CalendarModal from '../../components/CalendarModal/CalendarModal';\nimport Navbar from '../../components/Navbar/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/event';\nimport AddNewFab from '../../components/AddNewFab/AddNewFab';\nimport DeleteEventFab from '../../components/DeleteEventFab/DeleteEventFab';\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\n\nconst CalendarPage = () => {\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector(state => state.calendar);\n  const { uid } = useSelector(state => state.auth);\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n  const onDoubleClick = () => {\n    dispatch(uiOpenModal());\n  }\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e));\n  }\n\n  const onViewChange = (e) => {\n    localStorage.setItem('lastView', e);\n    setLastView(e);\n  }\n\n  const onSelectSlot = () => {\n    dispatch(eventClearActiveEvent());\n  }\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n\n    const style = {\n      backgroundColor: uid === event.user._id ? '#367cf7' : '#465660',\n      borderRadius: '0',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white'\n    }\n    return {\n      style\n    }\n  }\n\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch]);\n\n\n  return (\n    <div className=\"calendar-page\">\n      <Navbar />\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        view={lastView}\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        components={{\n          event: CalendarEvent\n        }}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        onSelectEvent={onSelectEvent}\n        onDoubleClickEvent={onDoubleClick}\n        onView={onViewChange}\n      />\n      {activeEvent && (\n        <DeleteEventFab />\n      )}\n      <AddNewFab />\n      <CalendarModal />\n    </div>\n  )\n}\n\nexport default CalendarPage\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  }\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value\n    });\n  }\n\n  return [values, handleInputChange, reset];\n\n}","import React from 'react'\nimport { useForm } from '../../hooks/useForm';\nimport './login.scss';\nimport { useDispatch } from 'react-redux';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\n\nconst LoginPage = () => {\n\n  const dispatch = useDispatch();\n\n  const [loginValues, handleLoginInputChange] = useForm({\n    lEmail: '',\n    lPassword: ''\n  });\n\n  const [registerValues, handleRegisterInputChange] = useForm({\n    rName: '',\n    rEmail: '',\n    rPassword: '',\n    rPasswordRepeat: ''\n  });\n\n  const { lEmail, lPassword } = loginValues;\n  const { rName, rEmail, rPassword, rPasswordRepeat } = registerValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLogin(lEmail, lPassword));\n  }\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    if (rPassword !== rPasswordRepeat) {\n      return Swal.fire('Error', 'The passwords dont match', 'error');\n    }\n    dispatch(startRegister(rName, rEmail, rPassword));\n  }\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"lEmail\"\n                placeholder=\"Email\"\n                onChange={handleLoginInputChange}\n                value={lEmail}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"lPassword\"\n                placeholder=\"Password\"\n                onChange={handleLoginInputChange}\n                value={lPassword}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit\"\n              />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Name\"\n                name=\"rName\"\n                value={rName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Email\"\n                name=\"rEmail\"\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Password\"\n                name=\"rPassword\"\n                value={rPassword}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Confirm password\"\n                name=\"rPasswordRepeat\"\n                value={rPasswordRepeat}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  localStorage.setItem('lastPath', rest.location.pathname);\n  return (\n    <Route\n      {...rest}\n      component={(props) => (\n        (isAuthenticated)\n          ? (<Component {...props} />)\n          : (<Redirect to=\"/login\" />)\n      )}\n    />\n  )\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n\nexport default PrivateRoute","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nconst PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  console.log(isAuthenticated);\n  return (\n    <Route\n      {...rest}\n      component={(props) => (\n        (!isAuthenticated)\n          ? (<Component {...props} />)\n          : (<Redirect to=\"/\" />)\n      )}\n    />\n  )\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n\nexport default PublicRoute;\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Switch\n} from 'react-router-dom'\nimport { startChecking } from '../actions/auth'\nimport CalendarPage from '../pages/CalendarPage/CalendarPage'\nimport LoginPage from '../pages/LoginPage/LoginPage'\nimport PrivateRoute from './PrivateRoute'\nimport PublicRoute from './PublicRoute'\n\nconst AppRouter = () => {\n\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector(state => state.auth);\n\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) {\n    return (\n      <h1>Waiting..</h1>\n    )\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <PublicRoute\n          isAuthenticated={!!uid}\n          path=\"/login\"\n          component={LoginPage}\n        />\n        <PrivateRoute\n          isAuthenticated={!!uid}\n          path=\"/\"\n          component={CalendarPage}\n        />\n        <Redirect to=\"/login\" />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default AppRouter\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false\n}\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true\n      }\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false\n      }\n    default:\n      return state;\n  }\n}","import { types } from \"../types/types\";\nconst initialState = {\n  events: [],\n  activeEvent: null\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventAddNew:\n\n      return {\n        ...state,\n        events: [...state.events, action.payload]\n      }\n\n    case types.eventSetActive:\n\n      return {\n        ...state,\n        activeEvent: action.payload\n      }\n    case types.eventClearActiveEvent:\n\n      return {\n        ...state,\n        activeEvent: null\n      }\n    case types.eventUpdated:\n\n      return {\n        ...state,\n        events: state.events.map(e => e.id === action.payload.id ? action.payload : e)\n      }\n\n    case types.eventDeleted:\n\n      return {\n        ...state,\n        activeEvent: null,\n        events: state.events.filter(e => e.id !== state.activeEvent.id)\n      }\n\n    case types.eventloaded:\n\n      return {\n        ...state,\n        events: [...action.payload]\n      }\n\n    case types.eventClean:\n\n      return {\n        ...initialState\n      }\n\n    default:\n      return state;\n  }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n  checking: true,\n  // uid:null,\n  // name:null\n};\n\nexport const authReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      }\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false,\n      }\n    case types.authLogout:\n      return {\n        checking: false,\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport { uiReducer } from \"./uiReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { authReducer } from \"./authReducer\";\n\nexport const rootReducers = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer,\n});","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducers } from \"../reducers/rootReducers\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n  rootReducers,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n);","import React from 'react'\nimport AppRouter from './routers/AppRouter'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\nconst CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  )\n}\n\nexport default CalendarApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.scss'\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}